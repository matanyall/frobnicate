name: CI

"on":
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1

      - name: Lint with Black
        uses: psf/black@stable

      - name: Lint with isort
        uses: isort/isort-action@v1

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run Pytest
        run: |
          poetry run pytest -m 'not local' --cov-report term --cov-report xml:coverage.xml --junitxml=report.xml --cov=frobnicate

      - name: Build frobnicate wheels
        run: poetry build

      - name: Build PEX file
        run: poetry run pex . -m frobnicate.main:app --sh-boot --compile --venv -v -o dist/frobnicate.pex
